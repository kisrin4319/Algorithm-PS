import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;

public class Main {
    static final int INF = Integer.MAX_VALUE/10;
    static ArrayList<Edge> edge;
    static int[] dist;
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter((new OutputStreamWriter(System.out)));

        int TC = Integer.parseInt(br.readLine());

        while(TC-->0)
        {

            String[] firstLine = br.readLine().split(" ");

            int N = Integer.parseInt(firstLine[0]);
            int M = Integer.parseInt(firstLine[1]);
            int W = Integer.parseInt(firstLine[2]);


            edge = new ArrayList<>();
            dist = new int[N+1];
            Arrays.fill(dist,INF);

            for(int idx =1; idx<=M;idx++)
            {
                String[] input = br.readLine().split(" ");

                int S = Integer.parseInt(input[0]);
                int E = Integer.parseInt(input[1]);
                int T = Integer.parseInt(input[2]);

                //무방향 그래프 이니까 시작점=>도착점 // 도착점=>시작점으로 추가
                edge.add(new Edge(S,E,T));
                edge.add(new Edge(E,S,T));
            }

            for(int idx = 1; idx<=W;idx++)
            {
                String[] input = br.readLine().split(" ");

                int S = Integer.parseInt(input[0]);
                int E = Integer.parseInt(input[1]);
                int T = Integer.parseInt(input[2]) * -1;
                //웜홀은 유방향
                edge.add(new Edge(S,E,T));
            }

            for(int j=1;j<=N;j++)
            {
                for(Edge e : edge){
                    dist[e.e] = Math.min(dist[e.e],(dist[e.s] + e.t));
                }
            }

            boolean answer = false;
            for(Edge e : edge){
                if(dist[e.e] > dist[e.s] + e.t){
                    answer = true;
                    break;
                }
            }

            if(answer){
                bw.write("YES");
            }else{
                bw.write("NO");
            }
            bw.newLine();
        }
        bw.flush();
        br.close();
    }
    private static class Edge
    {
        int s;
        int e;
        int t;
        public Edge(int s, int e, int t){
            this.s = s;
            this.e = e;
            this.t = t;
        }
    }
}
